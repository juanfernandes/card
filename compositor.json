{
  "name": "juanfernandes/card",
  "version": "0.1.4",
  "libraries": {
    "xv": "^1.1.25"
  },
  "title": "",
  "branch": "",
  "style": {
    "name": "Material",
    "componentSet": {
      "nav": "nav/DarkAbsoluteNav",
      "header": "header/GradientHeader",
      "article": "article/BasicArticle",
      "footer": "footer/BasicFooter"
    },
    "fontFamily": "Roboto, sans-serif",
    "heading": {
      "fontWeight": 500,
      "letterSpacing": "-0.01em"
    },
    "colors": {
      "text": "#212121",
      "background": "#fff",
      "primary": "#2196f3",
      "secondary": "#1565c0",
      "highlight": "#ff4081",
      "border": "#e0e0e0",
      "muted": "#f5f5f5"
    },
    "layout": {
      "centered": true,
      "bannerHeight": "80vh",
      "maxWidth": 896
    }
  },
  "content": [
    {
      "component": "nav",
      "links": [
        {
          "href": "https://github.com/juanfernandes/card",
          "text": "GitHub"
        },
        {
          "href": "https://npmjs.com/package/card",
          "text": "npm"
        }
      ]
    },
    {
      "component": "header",
      "heading": "card",
      "subhead": ":credit_card: make your credit card form better in one line of code",
      "children": [
        {
          "component": "ui/TweetButton",
          "text": "card: :credit_card: make your credit card form better in one line of code",
          "url": ""
        },
        {
          "component": "ui/GithubButton",
          "user": "juanfernandes",
          "repo": "card"
        }
      ],
      "text": "v2.1.1"
    },
    {
      "component": "article",
      "metadata": {
        "source": "github.readme"
      },
      "html": "<h1>Card - check out the <strong><a href=\"https://jessepollak.github.io/card\">demo</a></strong></h1>\n<h3>A better credit card form in one line of code</h3>\n<p>Card will take <em>any</em> credit card form and make it the best part of the checkout process (without you changing anything). Everything is created with pure CSS, HTML, and Javascript &#x2014; no images required.</p>\n<p><img src=\"http://i.imgur.com/qG3TenO.gif\"></p>\n<h2>Usage (without jQuery)</h2>\n<p>To use, you&apos;ll need to include the Card JavaScript files into your HTML, no CSS link is necessary as the JavaScript file does this for you. You can find the necessary file at <code>/dist/card.js</code> and include it in your HTML like so.</p>\n<pre><span class=\"hljs-comment\">&lt;!-- at the end of BODY --&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- CSS is included via this JavaScript file --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/path/to/card.js&quot;</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></pre><p>Once you&apos;ve included those files, you can initialize Card.</p>\n<pre><span class=\"hljs-keyword\">var</span> card = <span class=\"hljs-keyword\">new</span> Card({\n    <span class=\"hljs-comment\">// a selector or DOM element for the form where users will</span>\n    <span class=\"hljs-comment\">// be entering their information</span>\n    form: <span class=\"hljs-string\">&apos;form&apos;</span>, <span class=\"hljs-comment\">// *required*</span>\n    <span class=\"hljs-comment\">// a selector or DOM element for the container</span>\n    <span class=\"hljs-comment\">// where you want the card to appear</span>\n    container: <span class=\"hljs-string\">&apos;.card-wrapper&apos;</span>, <span class=\"hljs-comment\">// *required*</span>\n\n    formSelectors: {\n        <span class=\"hljs-attr\">numberInput</span>: <span class=\"hljs-string\">&apos;input#number&apos;</span>, <span class=\"hljs-comment\">// optional &#x2014; default input[name=&quot;number&quot;]</span>\n        expiryInput: <span class=\"hljs-string\">&apos;input#expiry&apos;</span>, <span class=\"hljs-comment\">// optional &#x2014; default input[name=&quot;expiry&quot;]</span>\n        cvcInput: <span class=\"hljs-string\">&apos;input#cvc&apos;</span>, <span class=\"hljs-comment\">// optional &#x2014; default input[name=&quot;cvc&quot;]</span>\n        nameInput: <span class=\"hljs-string\">&apos;input#name&apos;</span> <span class=\"hljs-comment\">// optional - defaults input[name=&quot;name&quot;]</span>\n    },\n\n    <span class=\"hljs-attr\">width</span>: <span class=\"hljs-number\">200</span>, <span class=\"hljs-comment\">// optional &#x2014; default 350px</span>\n    formatting: <span class=\"hljs-literal\">true</span>, <span class=\"hljs-comment\">// optional - default true</span>\n\n    <span class=\"hljs-comment\">// Strings for translation - optional</span>\n    messages: {\n        <span class=\"hljs-attr\">validDate</span>: <span class=\"hljs-string\">&apos;valid\\ndate&apos;</span>, <span class=\"hljs-comment\">// optional - default &apos;valid\\nthru&apos;</span>\n        monthYear: <span class=\"hljs-string\">&apos;mm/yyyy&apos;</span>, <span class=\"hljs-comment\">// optional - default &apos;month/year&apos;</span>\n    },\n\n    <span class=\"hljs-comment\">// Default placeholders for rendered fields - optional</span>\n    placeholders: {\n        <span class=\"hljs-attr\">number</span>: <span class=\"hljs-string\">&apos;&#x2022;&#x2022;&#x2022;&#x2022; &#x2022;&#x2022;&#x2022;&#x2022; &#x2022;&#x2022;&#x2022;&#x2022; &#x2022;&#x2022;&#x2022;&#x2022;&apos;</span>,\n        <span class=\"hljs-attr\">name</span>: <span class=\"hljs-string\">&apos;Full Name&apos;</span>,\n        <span class=\"hljs-attr\">expiry</span>: <span class=\"hljs-string\">&apos;&#x2022;&#x2022;/&#x2022;&#x2022;&apos;</span>,\n        <span class=\"hljs-attr\">cvc</span>: <span class=\"hljs-string\">&apos;&#x2022;&#x2022;&#x2022;&apos;</span>\n    },\n\n    <span class=\"hljs-attr\">masks</span>: {\n        <span class=\"hljs-attr\">cardNumber</span>: <span class=\"hljs-string\">&apos;&#x2022;&apos;</span> <span class=\"hljs-comment\">// optional - mask card number</span>\n    }\n\n    <span class=\"hljs-comment\">// if true, will log helpful messages for setting up Card</span>\n    debug: <span class=\"hljs-literal\">false</span> <span class=\"hljs-comment\">// optional - default false</span>\n});</pre><h3>Installing card from bower</h3>\n<p>If you&apos;re using bower, you can install card.js with:</p>\n<pre><span class=\"hljs-keyword\">bower </span><span class=\"hljs-keyword\">install </span>card --save</pre><h3>Installing card from npm</h3>\n<p>If you&apos;re using npm, you can install card.js with:</p>\n<pre><span class=\"hljs-built_in\">npm</span> install --save card\n\nvar $ = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;jquery&quot;</span>);\n<span class=\"hljs-regexp\">//</span> The current card.js code does <span class=\"hljs-keyword\">not</span> explictly <span class=\"hljs-built_in\">require</span> jQuery, but instead uses the <span class=\"hljs-built_in\">global</span>, so <span class=\"hljs-keyword\">this</span> line <span class=\"hljs-keyword\">is</span> needed.\n<span class=\"hljs-built_in\">window</span>.jQuery = $;\nvar card = <span class=\"hljs-built_in\">require</span>(<span class=\"hljs-string\">&quot;card&quot;</span>);</pre><h3>Using multiple inputs for one field</h3>\n<p>Card can be used in forms where you have multiple inputs that render to a single field (i.e. you have a first and last name input). To use Card with this functionality, just pass in a selector that selects the fields in the correct order. For example,</p>\n<pre><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&apos;card-wrapper&apos;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- CSS is included via this JavaScript file --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/path/to/card.js&quot;</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;number&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;first-name&quot;</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;last-name&quot;</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;expiry&quot;</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;cvc&quot;</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"actionscript\">\n<span class=\"hljs-keyword\">var</span> card = <span class=\"hljs-keyword\">new</span> Card({\n    form: <span class=\"hljs-string\">&apos;form&apos;</span>,\n    container: <span class=\"hljs-string\">&apos;.card-wrapper&apos;</span>,\n\n    formSelectors: {\n        nameInput: <span class=\"hljs-string\">&apos;input[name=&quot;first-name&quot;], input[name=&quot;last-name&quot;]&apos;</span>\n    }\n});\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></pre><h3>Rendering with different initial card placeholders</h3>\n<p>Card renders with default placeholders for card <code>name</code>, <code>number</code>, <code>expiry</code>, and <code>cvc</code>. To override these placeholders, you can pass in a <code>placeholders</code> object.</p>\n<pre><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&apos;card-wrapper&apos;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- CSS is included via this JavaScript file --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/path/to/card.js&quot;</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;number&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;name&quot;</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;expiry&quot;</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;cvc&quot;</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"actionscript\">\n\n<span class=\"hljs-keyword\">var</span> card = <span class=\"hljs-keyword\">new</span> Card({\n    form: <span class=\"hljs-string\">&apos;form&apos;</span>,\n    container: <span class=\"hljs-string\">&apos;.card-wrapper&apos;</span>,\n\n    placeholders: {\n        number: <span class=\"hljs-string\">&apos;**** **** **** ****&apos;</span>,\n        name: <span class=\"hljs-string\">&apos;Arya Stark&apos;</span>,\n        expiry: <span class=\"hljs-string\">&apos;**/****&apos;</span>,\n        cvc: <span class=\"hljs-string\">&apos;***&apos;</span>\n    }\n});\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></pre><h3>Translation</h3>\n<p>To render the card with the strings in a different language, you can pass in a <code>messages</code> object.</p>\n<pre><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">html</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">div</span> <span class=\"hljs-attr\">class</span>=<span class=\"hljs-string\">&apos;card-wrapper&apos;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">div</span>&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- CSS is included via this JavaScript file --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/path/to/card.js&quot;</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">form</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;number&quot;</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;name&quot;</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;expiry&quot;</span>/&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">input</span> <span class=\"hljs-attr\">type</span>=<span class=\"hljs-string\">&quot;text&quot;</span> <span class=\"hljs-attr\">name</span>=<span class=\"hljs-string\">&quot;cvc&quot;</span>/&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">form</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span><span class=\"actionscript\">\n\n<span class=\"hljs-keyword\">var</span> card = <span class=\"hljs-keyword\">new</span> Card({\n    form: <span class=\"hljs-string\">&apos;form&apos;</span>,\n    container: <span class=\"hljs-string\">&apos;.card-wrapper&apos;</span>,\n\n    messages: {\n        validDate: <span class=\"hljs-string\">&apos;expire\\ndate&apos;</span>,\n        monthYear: <span class=\"hljs-string\">&apos;mm/yy&apos;</span>\n    }\n});\n</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">body</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">html</span>&gt;</span></pre><h2>Using with jQuery</h2>\n<p>To use with jQuery, you&apos;ll need to include the <code>jquery.card.js</code> file into your HTML. You can find the necessary file at <code>/dist/jquery.card.js</code> and include it in your HTML like so.</p>\n<pre><span class=\"hljs-comment\">&lt;!-- at the end of BODY --&gt;</span>\n<span class=\"hljs-comment\">&lt;!-- CSS is included via this JavaScript file --&gt;</span>\n<span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/path/to/jquery.card.js&quot;</span>&gt;</span><span class=\"undefined\"></span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></pre><p>Once you&apos;ve included those files, you can initialize Card with jQuery.</p>\n<pre>$(<span class=\"hljs-string\">&apos;form&apos;</span>).card({\n    <span class=\"hljs-comment\">// a selector or DOM element for the container</span>\n    <span class=\"hljs-comment\">// where you want the card to appear</span>\n    container: <span class=\"hljs-string\">&apos;.card-wrapper&apos;</span>, <span class=\"hljs-comment\">// *required*</span>\n\n    <span class=\"hljs-comment\">// all of the other options from above</span>\n});</pre><h2>Using with other javascript libraries</h2>\n<p>Card has wrappers that make it easy to use with other javascript libraries:</p>\n<h3>Angular (1.x Currently)</h3>\n<ul>\n<li><a href=\"https://github.com/gavruk/angular-card\">angular-card</a></li>\n</ul>\n<h3>Ember</h3>\n<ul>\n<li><a href=\"https://github.com/esbanarango/ember-credit-card\">ember-credit-card</a></li>\n</ul>\n<h3>React</h3>\n<ul>\n<li><a href=\"https://github.com/JohnyDays/react-credit-card\">react-credit-card</a></li>\n<li><a href=\"https://github.com/shatran/card-react\">card-react</a></li>\n</ul>\n<h2>Development</h2>\n<p>To contribute, follow this steps:</p>\n<pre>$ git <span class=\"hljs-built_in\">clone</span> --recursive https://github.com/jessepollak/card.git\n$ <span class=\"hljs-built_in\">cd</span> card\n$ git submodule init &amp;&amp; git submodule update\n$ npm install\n$ npm development</pre><p>Now, if you go to localhost:8080/example in your browser, you should see the demo page.</p>\n<h2>Places using Card</h2>\n<p>Card is used in the wild in these places:</p>\n<ul>\n<li><a href=\"http://www.inspectall.com/\">InspectAll</a></li>\n<li><a href=\"https://www.pennywhale.com/\">PennyWhale</a></li>\n<li><a href=\"https://www.makespace.com/\">MakeSpace</a></li>\n<li><a href=\"http://www.blumpa.com/\">Blumpa</a></li>\n<li><a href=\"http://www.courseloads.com/\">CourseLoads</a></li>\n<li><a href=\"http://pubnub.com/\">PubNub</a></li>\n<li><a href=\"https://www.gigsalad.com\">GigSalad</a></li>\n<li><a href=\"http://www.boligninja.dk\">Boligninja</a></li>\n<li><a href=\"http://www.easycarros.com/\">EasyCarros</a></li>\n<li>[Sintelle] (<a href=\"http://www.sintelleparapharmacie.com/\">http://www.sintelleparapharmacie.com/</a>)</li>\n<li><a href=\"http://wevorce.com/\">Wevorce</a></li>\n<li><a href=\"https://github.com/Payum/PayumServer\">PayumServer</a></li>\n<li><a href=\"https://paribus.co\">Paribus</a></li>\n<li><a href=\"https://www.bizzabo.com\">Bizzabo</a></li>\n<li><a href=\"https://www.tortuba.com\">Tortuba</a></li>\n<li><a href=\"https://www.netlify.com\">Netlify</a></li>\n</ul>\n<p>Are you using Card in production? If so, we&apos;d love to link to you from this page. Open a PR or drop <a href=\"http://twitter.com/jessepollak\">@jessepollak</a> a line on <a href=\"http://twitter.com/jessepollak\">Twitter</a> and we&apos;ll add you right away!</p>\n<h2>Donations</h2>\n<p>If you&apos;d like to donate to help support development of Card, send Bitcoin directly to <code>17NUKd3v7GWben18kGhmFafa4ZpWrXpQSC</code> or through Coinbase <a href=\"https://coinbase.com/jessepollak\">here</a>.</p>\n"
    },
    {
      "component": "footer",
      "links": [
        {
          "href": "https://github.com/juanfernandes/card",
          "text": "GitHub"
        },
        {
          "href": "https://github.com/juanfernandes",
          "text": "juanfernandes"
        }
      ]
    }
  ]
}